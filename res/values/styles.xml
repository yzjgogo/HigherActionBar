<resources>

    <!--
        Base application theme, dependent on API level. This theme is replaced
        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
    -->
    <style name="AppBaseTheme" parent="android:Theme.Light">
        <!--
            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.
        -->
    </style>

    <!-- Application theme. -->
    <style name="AppTheme" parent="AppBaseTheme">
        <!-- All customizations that are NOT specific to a particular API-level can go here. -->
    </style>

    <!-- 
    	没有引用support包的情况，自定义主题：
    	这里目的是改变ActionBar的背景，则我们要自定义一个主题且需指定其父主题
    	重写该主题的android:actionBarStyle属性；
    	该ActionBar属性的操作是在原来属性的基础上重写其background属性。
    	注意：指定parent是必须的，因为你只是在parent的基础上修改parent的某一个属性或添加一个属性，要
    	保证其他属性的存在、
    	其实，这种方式不仅仅局限于自定义ActionBar的theme，其他样式的定义也是这个套路
     -->
        <!-- the theme applied to the application or activity -->
    <style name="CustomActionBarTheme"
           parent="@android:style/Theme.Holo.Light.DarkActionBar">
        <item name="android:actionBarStyle">@style/MyActionBar</item>
    </style>

    <!-- ActionBar styles -->
    <style name="MyActionBar"
           parent="@android:style/Widget.Holo.Light.ActionBar.Solid.Inverse">
        <item name="android:background">@drawable/actionbar_background</item>
    </style>
    
    
    
    
    
    
    
    
    
    
    <!-- 
    
    
    	没有引用support包的项目，自定义ActionBar的字体的样式
    
     -->
    
    
    
    
    
    <!-- the theme applied to the application or activity -->
    <style name="CustomActionBarTextColorTheme"
           parent="@android:style/Theme.Holo.Light.DarkActionBar">
        <item name="android:actionBarStyle">@style/MyActionBarTextColor</item>
        <!-- ActionBar Tab -->
        <item name="android:actionBarTabStyle">@style/MyActionBarTabs</item>
        <item name="android:actionBarTabTextStyle">@style/MyActionBarTabText</item>
        <!-- 菜单字体颜色 -->
        <item name="android:actionMenuTextColor">#228B22</item>
    </style>

    <!-- ActionBar styles -->
    <style name="MyActionBarTextColor"
           parent="@android:style/Widget.Holo.ActionBar">
        <item name="android:titleTextStyle">@style/MyActionBarTitleText</item>
    </style>

    <!-- ActionBar title text -->
    <style name="MyActionBarTitleText"
           parent="@android:style/TextAppearance.Holo.Widget.ActionBar.Title">
        <item name="android:textColor">#FF0000</item>
    </style>

    <!-- ActionBar tabs text styles 
    tab里的字体颜色-->
    <style name="MyActionBarTabText"
           parent="@android:style/Widget.Holo.ActionBar.TabText">
        <item name="android:textColor">#00008B</item>
    </style>
        <!-- ActionBar tabs styles -->
    <style name="MyActionBarTabs"
           parent="@android:style/Widget.Holo.ActionBar.TabView">
        <!-- tab indicator -->
        <item name="android:background">@drawable/actionbar_tab_indicator</item>
    </style>
    
    
    
    
    
    
    
    <!-- 
    
    ActionBar的overlay mode
    ActionBar覆盖在Activity的上面
    
     -->
    <style 
        name="ActionBarOverLay"
        parent="@android:style/Theme.Holo">
        <item name="android:windowActionBarOverlay">true</item>
    </style>
    
    
</resources>
